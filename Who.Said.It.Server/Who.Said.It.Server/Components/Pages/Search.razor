@page "/search"
@rendermode InteractiveServer
@inject IDialogueSearchService _dialogueSearchService

@code {
    private string _textValue { get; set; } = string.Empty;
    private const int _maxResults = 5;

    private async Task<IEnumerable<string>> HandleSearch(string value, CancellationToken token)
    {
        // do i need _textValue and CancellationToken here?

        return await _dialogueSearchService.SearchTopNDialoguesAsync(value, _maxResults, token);
    }
}

<MudPopoverProvider />

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudGrid Justify="Justify.Center" Spacing="10">
        <MudItem xs="12">
            <MudText Typo="Typo.h4"
                     Align="Align.Center">
                <b>Type in a quote - we'll find where it's from.</b>
            </MudText>
        </MudItem>

        <MudItem xs="6">
            <MudAutocomplete Label="Search" 
                             @bind-Value="_textValue"
                             CoerceValue="true"
                             SearchFunc="HandleSearch"
                             ShowProgressIndicator="true"
                             AdornmentIcon="@Icons.Material.Filled.Search">
                <ProgressIndicatorTemplate>
                    <MudProgressLinear Size="Size.Small"
                                       Indeterminate="true"
                                       Color="Color.Primary" />
                </ProgressIndicatorTemplate>
            </MudAutocomplete>
        </MudItem>
    </MudGrid>
</MudContainer>